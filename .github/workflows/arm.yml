name: Arm

on:
  workflow_dispatch:
    inputs:
      device:
          description: 'device codename (e.g topaz/tissot)'
          default: 'samsung'
          required: true
      repo:
          description: 'Kernel source link (dont include . git at the end)'
          default: 'https://github.com/malkist01/J6.git'
          required: true
      branch:
          description: 'Kernel source branch'
          default: '3.18'
          required: true
      token:
          description: 'Telegram bot token'
          default: '7596553794:AAGoeg4VypmUfBqfUML5VWt5mjivN5-3ah8'
          required: false
      chat_id:
          description: 'Telegram chat id'
          default: '-1002287610863'
          required: false


env:
  TZ: Asia/Jakarta
  DEVICE: ${{ github.event.inputs.device }}
  REPO: ${{ github.event.inputs.repo }}
  BRANCH: ${{ github.event.inputs.branch }}
  token: ${{ github.event.inputs.token }}
  chat_id: ${{ github.event.inputs.chat_id }}

jobs:
  kernel-build:
    runs-on: ubuntu-24.04

    steps:
      - name: Initializing environment
        run: |
          git config --global user.name "malkist01"
          git config --global user.email "aripujiyanto0812@gmail.com"
          df -h
          ld --version
          gcc -v
          ar --version
          sudo apt-get install --no-install-recommends -y gcc-arm-linux-gnueabi gcc-aarch64-linux-gnu lld llvm g++-aarch64-linux-gnu
         aria2c -q https://raw.githubusercontent.com/Homebrew/install/master/uninstall.sh && NONINTERACTIVE=1 bash ./uninstall.sh -f -q
         if [ -f /bin/swapon ]; then
             export SWAP_FILE=$(swapon --show=NAME | tail -n 1)
             sudo swapoff $SWAP_FILE
             sudo rm $SWAP_FILE
             sudo fallocate -l 16G $SWAP_FILE
             sudo chmod 600 $SWAP_FILE
             sudo mkswap $SWAP_FILE
             sudo swapon $SWAP_FILE
             unset SWAP_FILE
         fi

      - name: Compiling
        run: |
          if [ "${DEVICE}" = "samsung" ]; then
            wget https://raw.githubusercontent.com/malkist01/kernel_build_action/main/scripts/m.sh
            bash m.sh
          else
            echo "Device not supported yet"
          fi